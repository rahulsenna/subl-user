// Settings in here override those in "LSP-typescript/LSP-typescript.sublime-settings"

{
	"settings": {
	    // Javascript inlay hints options.
	    "javascript.inlayHints.includeInlayEnumMemberValueHints": true,
	    "javascript.inlayHints.includeInlayFunctionLikeReturnTypeHints": true,
	    "javascript.inlayHints.includeInlayFunctionParameterTypeHints": true,
	    "javascript.inlayHints.includeInlayParameterNameHints": "none",
	    "javascript.inlayHints.includeInlayParameterNameHintsWhenArgumentMatchesName": true,
	    "javascript.inlayHints.includeInlayPropertyDeclarationTypeHints": true,
	    "javascript.inlayHints.includeInlayVariableTypeHints": true,
	    // Typescript inlay hints options.
	    "typescript.inlayHints.includeInlayEnumMemberValueHints": true,
	    "typescript.inlayHints.includeInlayFunctionLikeReturnTypeHints": true,
	    "typescript.inlayHints.includeInlayFunctionParameterTypeHints": true,
	    "typescript.inlayHints.includeInlayParameterNameHints": "none",
	    "typescript.inlayHints.includeInlayParameterNameHintsWhenArgumentMatchesName": true,
	    "typescript.inlayHints.includeInlayPropertyDeclarationTypeHints": true,
	    "typescript.inlayHints.includeInlayVariableTypeHints": true,



	   	// Javascript formatting options.
		"javascript.format.insertSpaceAfterCommaDelimiter": true,
		"javascript.format.insertSpaceAfterConstructor": false,
		"javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
		"javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
		"javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": false,
		"javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,
		"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
		"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
		"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
		"javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
		"javascript.format.insertSpaceAfterSemicolonInForStatements": true,
		"javascript.format.insertSpaceAfterTypeAssertion": false,
		"javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
		"javascript.format.insertSpaceBeforeFunctionParenthesis": false,
		"javascript.format.insertSpaceBeforeTypeAnnotation": false,
		"javascript.format.placeOpenBraceOnNewLineForControlBlocks": true,
		"javascript.format.placeOpenBraceOnNewLineForFunctions": true,
		"javascript.format.semicolons": "ignore", // ignore | insert | remove
		"javascript.format.trimTrailingWhitespace": true,


		// Typescript formatting options.
		"typescript.format.insertSpaceAfterCommaDelimiter": true,
		"typescript.format.insertSpaceAfterConstructor": false,
		"typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,
		"typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
		"typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": false,
		"typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,
		"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,
		"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
		"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
		"typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
		"typescript.format.insertSpaceAfterSemicolonInForStatements": true,
		"typescript.format.insertSpaceAfterTypeAssertion": false,
		"typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
		"typescript.format.insertSpaceBeforeFunctionParenthesis": false,
		"typescript.format.insertSpaceBeforeTypeAnnotation": false,
		"typescript.format.placeOpenBraceOnNewLineForControlBlocks": true,
		"typescript.format.placeOpenBraceOnNewLineForFunctions": true,
		"typescript.format.semicolons": "ignore", // ignore | insert | remove
		"typescript.format.trimTrailingWhitespace": true,
  }
}
